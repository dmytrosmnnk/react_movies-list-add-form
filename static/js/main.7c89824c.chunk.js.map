{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleError","setTitleError","descriptionError","setDescriptionError","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","imdbIdError","setImdbIdError","newMovie","onSubmit","event","preventDefault","type","name","placeholder","value","onChange","target","onClick","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c89824c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [titleError, setTitleError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n  const [imgUrlError, setImgUrlError] = useState(false);\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n  const [imdbIdError, setImdbIdError] = useState(false);\n\n  const newMovie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  const checkInput = () => {\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!description) {\n      setDescriptionError(true);\n    }\n\n    if (!imgUrl) {\n      setImgUrlError(true);\n    }\n\n    if (!imdbUrl) {\n      setImdbUrlError(true);\n    }\n\n    if (!imdbId) {\n      setImdbIdError(true);\n    }\n  };\n\n  const handleClick = () => {\n    checkInput();\n\n    if (!title || !description || !imgUrl || !imdbUrl || !imdbId) {\n      return;\n    }\n\n    onAdd(newMovie);\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  return (\n    <form\n      className=\"newMovie-form\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <input\n        className={\n          titleError\n            ? 'newMovie-form-item newMovie-error'\n            : 'newMovie-form-item'\n        }\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"Add title\"\n        value={title}\n        onChange={(event) => {\n          setTitle(event.target.value);\n          setTitleError(false);\n        }}\n      />\n      <textarea\n        className={\n          descriptionError\n            ? 'newMovie-form-item newMovie-error'\n            : 'newMovie-form-item'\n        }\n        name=\"description\"\n        placeholder=\"Add description\"\n        value={description}\n        onChange={(event) => {\n          setDescription(event.target.value);\n          setDescriptionError(false);\n        }}\n      />\n      <input\n        className={\n          imgUrlError\n            ? 'newMovie-form-item newMovie-error'\n            : 'newMovie-form-item'\n        }\n        type=\"text\"\n        name=\"imgUrl\"\n        placeholder=\"Add imgUrl\"\n        value={imgUrl}\n        onChange={(event) => {\n          setImgUrl(event.target.value);\n          setImgUrlError(false);\n        }}\n      />\n      <input\n        className={\n          imdbUrlError\n            ? 'newMovie-form-item newMovie-error'\n            : 'newMovie-form-item'\n        }\n        type=\"text\"\n        name=\"imdbUrl\"\n        placeholder=\"Add imdbUrl\"\n        value={imdbUrl}\n        onChange={(event) => {\n          setImdbUrl(event.target.value);\n          setImdbUrlError(false);\n        }}\n      />\n      <input\n        className={\n          imdbIdError\n            ? 'newMovie-form-item newMovie-error'\n            : 'newMovie-form-item'\n        }\n        type=\"text\"\n        name=\"imdbId\"\n        placeholder=\"Add imdbId\"\n        value={imdbId}\n        onChange={(event) => {\n          setImdbId(event.target.value);\n          setImdbIdError(false);\n        }}\n      />\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={handleClick}\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(() => [\n      ...movies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <div className=\"card\">\n          <div className=\"newMovie\">\n            <p className=\"title newMovie-title\">\n              Add a new movie:\n            </p>\n            <NewMovie onAdd={addMovie} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}